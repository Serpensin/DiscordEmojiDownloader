<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SerpentModding</name>
    </assembly>
    <members>
        <member name="T:SerpentModding.KITTScanner">
            <summary>
            Provides a KITT-style scanning beam animation for a target <see cref="T:System.Windows.Forms.Control"/>.
            </summary>
        </member>
        <member name="P:SerpentModding.KITTScanner.BeamWidth">
            <summary>
            Gets or sets the width of the scanning beam in pixels.
            </summary>
        </member>
        <member name="P:SerpentModding.KITTScanner.Speed">
            <summary>
            Gets or sets the speed of the scanning beam in pixels per tick.
            </summary>
        </member>
        <member name="P:SerpentModding.KITTScanner.MainColor">
            <summary>
            Gets or sets the main color of the scanning beam.
            </summary>
        </member>
        <member name="M:SerpentModding.KITTScanner.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:SerpentModding.KITTScanner"/> class for the specified target control.
            </summary>
            <param name="target">The control on which to display the scanning beam.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="target"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SerpentModding.KITTScanner.Start">
            <summary>
            Starts the scanning animation.
            </summary>
        </member>
        <member name="M:SerpentModding.KITTScanner.Stop">
            <summary>
            Stops the scanning animation.
            </summary>
        </member>
        <member name="M:SerpentModding.KITTScanner.OnTick(System.Object,System.EventArgs)">
            <summary>
            Handles the timer tick event to update the beam position and direction.
            </summary>
        </member>
        <member name="M:SerpentModding.KITTScanner.OnPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the Paint event to render the scanning beam.
            </summary>
        </member>
        <member name="T:SerpentModding.LogLevel">
            <summary>
            Represents the severity level of a log message.
            </summary>
        </member>
        <member name="F:SerpentModding.LogLevel.Trace">
            <summary>Trace level for very detailed logs.</summary>
        </member>
        <member name="F:SerpentModding.LogLevel.Debug">
            <summary>Debug level for debugging information.</summary>
        </member>
        <member name="F:SerpentModding.LogLevel.Info">
            <summary>Info level for informational messages.</summary>
        </member>
        <member name="F:SerpentModding.LogLevel.Warn">
            <summary>Warn level for warning messages.</summary>
        </member>
        <member name="F:SerpentModding.LogLevel.Error">
            <summary>Error level for error messages.</summary>
        </member>
        <member name="F:SerpentModding.LogLevel.Fatal">
            <summary>Fatal level for critical errors.</summary>
        </member>
        <member name="T:SerpentModding.Logger">
            <summary>
            Provides logging functionality with support for file and console output, log levels, and exception handling.
            </summary>
        </member>
        <member name="P:SerpentModding.Logger.Instance">
            <summary>
            Gets the singleton instance of the <see cref="T:SerpentModding.Logger"/> class.
            </summary>
        </member>
        <member name="M:SerpentModding.Logger.GetLogFilePath">
            <summary>
            Gets the full path to the current log file if the logger is initialized; otherwise, returns an empty string.
            </summary>
            <returns>
            The full path to the log file if initialized; otherwise, an empty string.
            </returns>
        </member>
        <member name="M:SerpentModding.Logger.ReadAllLogs">
            <summary>
            Reads all log entries from the current log file if the logger is initialized and the file exists.
            </summary>
            <returns>
            An array of log entries, or an empty array if the logger is not initialized, the file does not exist, or an error occurs.
            </returns>
        </member>
        <member name="M:SerpentModding.Logger.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:SerpentModding.Logger"/> class from being created.
            </summary>
        </member>
        <member name="M:SerpentModding.Logger.Initialize(SerpentModding.LogLevel,System.Boolean)">
            <summary>
            Initializes the logger with the specified minimum log level and console output option.
            </summary>
            <param name="minimumLevel">The minimum <see cref="T:SerpentModding.LogLevel"/> to log.</param>
            <param name="logToConsole">Whether to also log messages to the console.</param>
        </member>
        <member name="M:SerpentModding.Logger.Log(SerpentModding.LogLevel,System.String,System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Logs a message with the specified log level, message, and optional exception and caller information.
            </summary>
            <param name="level">The <see cref="T:SerpentModding.LogLevel"/> of the log entry.</param>
            <param name="message">The log message.</param>
            <param name="ex">The exception to log, if any.</param>
            <param name="caller">The name of the calling member (automatically supplied).</param>
            <param name="file">The file path of the calling member (automatically supplied).</param>
            <param name="line">The line number in the source file (automatically supplied).</param>
        </member>
        <member name="M:SerpentModding.Logger.Trace(System.String,System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Logs a trace-level message.
            </summary>
            <param name="msg">The log message.</param>
            <param name="ex">The exception to log, if any.</param>
            <param name="c">The name of the calling member (automatically supplied).</param>
            <param name="f">The file path of the calling member (automatically supplied).</param>
            <param name="l">The line number in the source file (automatically supplied).</param>
        </member>
        <member name="M:SerpentModding.Logger.Debug(System.String,System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Logs a debug-level message.
            </summary>
            <param name="msg">The log message.</param>
            <param name="ex">The exception to log, if any.</param>
            <param name="c">The name of the calling member (automatically supplied).</param>
            <param name="f">The file path of the calling member (automatically supplied).</param>
            <param name="l">The line number in the source file (automatically supplied).</param>
        </member>
        <member name="M:SerpentModding.Logger.Info(System.String,System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Logs an info-level message.
            </summary>
            <param name="msg">The log message.</param>
            <param name="ex">The exception to log, if any.</param>
            <param name="c">The name of the calling member (automatically supplied).</param>
            <param name="f">The file path of the calling member (automatically supplied).</param>
            <param name="l">The line number in the source file (automatically supplied).</param>
        </member>
        <member name="M:SerpentModding.Logger.Warn(System.String,System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Logs a warning-level message.
            </summary>
            <param name="msg">The log message.</param>
            <param name="ex">The exception to log, if any.</param>
            <param name="c">The name of the calling member (automatically supplied).</param>
            <param name="f">The file path of the calling member (automatically supplied).</param>
            <param name="l">The line number in the source file (automatically supplied).</param>
        </member>
        <member name="M:SerpentModding.Logger.Error(System.String,System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Logs an error-level message.
            </summary>
            <param name="msg">The log message.</param>
            <param name="ex">The exception to log, if any.</param>
            <param name="c">The name of the calling member (automatically supplied).</param>
            <param name="f">The file path of the calling member (automatically supplied).</param>
            <param name="l">The line number in the source file (automatically supplied).</param>
        </member>
        <member name="M:SerpentModding.Logger.Fatal(System.String,System.Exception,System.String,System.String,System.Int32)">
            <summary>
            Logs a fatal-level message.
            </summary>
            <param name="msg">The log message.</param>
            <param name="ex">The exception to log, if any.</param>
            <param name="c">The name of the calling member (automatically supplied).</param>
            <param name="f">The file path of the calling member (automatically supplied).</param>
            <param name="l">The line number in the source file (automatically supplied).</param>
        </member>
        <member name="M:SerpentModding.Logger.GetCallingNamespace">
            <summary>
            Gets the namespace of the calling method from the current stack trace.
            </summary>
            <returns>The namespace of the calling method, or "UnknownNamespace" if not found.</returns>
        </member>
        <member name="M:SerpentModding.Logger.GetCallingNamespaceFromStack(System.Exception)">
            <summary>
            Gets the namespace of the calling method from the stack trace of an exception.
            </summary>
            <param name="ex">The exception to analyze.</param>
            <returns>The namespace of the calling method, or "UnknownNamespace" if not found.</returns>
        </member>
        <member name="M:SerpentModding.Logger.GetLocationFromException(System.Exception)">
            <summary>
            Gets the location (class, method, and line number) from the stack trace of an exception.
            </summary>
            <param name="ex">The exception to analyze.</param>
            <returns>A string representing the location, or "UnknownLocation" if not found.</returns>
        </member>
        <member name="M:SerpentModding.Logger.GetColor(SerpentModding.LogLevel)">
            <summary>
            Gets the console color associated with a log level.
            </summary>
            <param name="level">The <see cref="T:SerpentModding.LogLevel"/>.</param>
            <returns>The <see cref="T:System.ConsoleColor"/> for the log level.</returns>
        </member>
        <member name="M:SerpentModding.Logger.LogException(SerpentModding.LogLevel,System.String,System.Exception)">
            <summary>
            Logs an exception with the specified log level and message.
            </summary>
            <param name="level">The <see cref="T:SerpentModding.LogLevel"/> of the log entry.</param>
            <param name="message">The log message.</param>
            <param name="ex">The exception to log.</param>
        </member>
        <member name="T:SerpentModding.UIController">
            <summary>
            Provides static methods and properties for managing the main form's UI, including window title, icon, 
            and animated transitions between registered <see cref="T:System.Windows.Forms.UserControl"/> instances. 
            Supports customizable transition directions and easing modes for smooth UI animations.
            </summary>
        </member>
        <member name="T:SerpentModding.UIController.TransitionDirection">
            <summary>
            Specifies the direction of the UI transition animation when switching between controls.
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.TransitionDirection.Left">
            <summary>
            Transition from right to left.
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.TransitionDirection.Right">
            <summary>
            Transition from left to right.
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.TransitionDirection.Up">
            <summary>
            Transition from bottom to top.
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.TransitionDirection.Down">
            <summary>
            Transition from top to bottom.
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.TransitionDirection.None">
            <summary>
            No transition animation.
            </summary>
        </member>
        <member name="T:SerpentModding.UIController.EasingMode">
            <summary>
            Specifies the available easing modes for UI transition animations.
            Easing modes determine the rate of change of the animation over time,
            allowing for effects such as acceleration, deceleration, and elasticity.
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.EasingMode.Linear">
            <summary>
            Linear interpolation with a constant rate of change.
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.EasingMode.EaseIn">
            <summary>
            Accelerates from zero velocity (ease-in).
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.EasingMode.EaseOut">
            <summary>
            Decelerates to zero velocity (ease-out).
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.EasingMode.EaseInOut">
            <summary>
            Accelerates and then decelerates (ease-in-out).
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.EasingMode.ElasticOut">
            <summary>
            Ends with an elastic bounce effect.
            </summary>
        </member>
        <member name="F:SerpentModding.UIController.EasingMode.BounceOut">
            <summary>
            Ends with a bouncing effect.
            </summary>
        </member>
        <member name="M:SerpentModding.UIController.Init(System.Windows.Forms.Form)">
            <summary>
            Initializes the <see cref="T:SerpentModding.UIController"/> with the specified main form instance.
            Stores a reference to the main form and its original window title for later use.
            </summary>
            <param name="main">
            The <see cref="T:System.Windows.Forms.Form"/> form instance to associate with the UI controller.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if the <paramref name="main"/> parameter is <c>null</c>.
            </exception>
        </member>
        <member name="M:SerpentModding.UIController.SetWindowTitle(System.String,System.Boolean)">
            <summary>
            Sets the window title of the main form.
            </summary>
            <param name="title">
            The new title to set for the main form window.
            </param>
            <param name="remember">
            If <c>true</c>, updates the stored original title to the new value.
            If <c>false</c>, only changes the window title temporarily.
            </param>
        </member>
        <member name="M:SerpentModding.UIController.SetTemporaryTitle(System.String)">
            <summary>
            Sets the window title of the main form to a temporary value by appending the specified suffix
            to the original title. This is useful for indicating temporary states or progress in the UI.
            </summary>
            <param name="suffix">
            The suffix to append to the original window title. A space is automatically inserted between
            the original title and the suffix.
            </param>
        </member>
        <member name="M:SerpentModding.UIController.ResetTitle">
            <summary>
            Resets the window title of the main form to its original value.
            This method restores the window title to the value that was present
            when the <see cref="T:SerpentModding.UIController"/> was initialized or last updated
            using <see cref="M:SerpentModding.UIController.SetWindowTitle(System.String,System.Boolean)"/> with <c>remember</c> set to <c>true</c>.
            </summary>
        </member>
        <member name="M:SerpentModding.UIController.SetWindowIcon(System.Drawing.Icon)">
            <summary>
            Sets the window icon of the main form.
            </summary>
            <param name="icon">
            The <see cref="T:System.Drawing.Icon"/> to set as the window icon for the main form.
            If <paramref name="icon"/> is <c>null</c>, the icon will not be changed.
            </param>
        </member>
        <member name="M:SerpentModding.UIController.RegisterControl(System.String,System.Windows.Forms.UserControl)">
            <summary>
            Registers a <see cref="T:System.Windows.Forms.UserControl"/> with the UI controller under the specified name.
            Stores the control and its original position for later use in UI transitions.
            </summary>
            <param name="name">
            The unique name to associate with the control. This name is used to reference the control when switching UI views.
            </param>
            <param name="control">
            The <see cref="T:System.Windows.Forms.UserControl"/> instance to register. The control's initial <see cref="!:UserControl.Location"/> is stored for transition animations.
            </param>
        </member>
        <member name="M:SerpentModding.UIController.ShowControl(System.String,SerpentModding.UIController.TransitionDirection,System.Int32,SerpentModding.UIController.EasingMode)">
            <summary>
            Displays the specified registered <see cref="T:System.Windows.Forms.UserControl"/> in the main form,
            optionally animating the transition from the currently visible control.
            </summary>
            <param name="name">
            The unique name of the control to display, as registered via <see cref="M:SerpentModding.UIController.RegisterControl(System.String,System.Windows.Forms.UserControl)"/>.
            </param>
            <param name="direction">
            The direction of the transition animation. If <see cref="F:SerpentModding.UIController.TransitionDirection.None"/>, no animation is performed.
            </param>
            <param name="durationMs">
            The duration of the transition animation in milliseconds. Ignored if <paramref name="direction"/> is <see cref="F:SerpentModding.UIController.TransitionDirection.None"/>.
            </param>
            <param name="easingMode">
            The easing mode to use for the transition animation. Ignored if <paramref name="direction"/> is <see cref="F:SerpentModding.UIController.TransitionDirection.None"/>.
            </param>
        </member>
        <member name="M:SerpentModding.UIController.AnimateTransition(System.Windows.Forms.UserControl,System.Windows.Forms.UserControl,SerpentModding.UIController.TransitionDirection,System.Int32,SerpentModding.UIController.EasingMode)">
            <summary>
            Animates the transition between two <see cref="T:System.Windows.Forms.UserControl"/> instances within the main form.
            Moves the <paramref name="from"/> control out and the <paramref name="to"/> control in,
            according to the specified <paramref name="direction"/>, over the given <paramref name="durationMs"/>,
            using the provided <paramref name="easingMode"/> for the animation curve.
            </summary>
            <param name="from">
            The currently visible <see cref="T:System.Windows.Forms.UserControl"/> to animate out.
            </param>
            <param name="to">
            The <see cref="T:System.Windows.Forms.UserControl"/> to animate in and display after the transition.
            </param>
            <param name="direction">
            The <see cref="T:SerpentModding.UIController.TransitionDirection"/> specifying the direction of the transition animation.
            </param>
            <param name="durationMs">
            The duration of the transition animation in milliseconds.
            </param>
            <param name="easingMode">
            The <see cref="T:SerpentModding.UIController.EasingMode"/> to use for the animation's rate of change.
            </param>
        </member>
        <member name="M:SerpentModding.UIController.EaseIn(System.Double)">
            <summary>
            Cubic ease-in function for UI transition animations.
            Produces an accelerating curve, starting slow and speeding up toward the end.
            </summary>
            <param name="t">
            The normalized time of the animation, ranging from 0 (start) to 1 (end).
            </param>
            <returns>
            The eased value at time <paramref name="t"/>, between 0 and 1.
            </returns>
        </member>
        <member name="M:SerpentModding.UIController.EaseOut(System.Double)">
            <summary>
            Cubic ease-out function for UI transition animations.
            Produces a decelerating curve, starting fast and slowing down toward the end.
            </summary>
            <param name="t">
            The normalized time of the animation, ranging from 0 (start) to 1 (end).
            </param>
            <returns>
            The eased value at time <paramref name="t"/>, between 0 and 1.
            </returns>
        </member>
        <member name="M:SerpentModding.UIController.EaseInOut(System.Double)">
            <summary>
            Cubic ease-in-out function for UI transition animations.
            Produces an animation that accelerates in the first half and decelerates in the second half,
            resulting in a smooth start and end to the transition.
            </summary>
            <param name="t">
            The normalized time of the animation, ranging from 0 (start) to 1 (end).
            </param>
            <returns>
            The eased value at time <paramref name="t"/>, between 0 and 1.
            </returns>
        </member>
        <member name="M:SerpentModding.UIController.ElasticOut(System.Double)">
            <summary>
            Elastic ease-out function for UI transition animations.
            Produces an elastic effect, where the animation overshoots and oscillates before settling.
            </summary>
            <param name="t">
            The normalized time of the animation, ranging from 0 (start) to 1 (end).
            </param>
            <returns>
            The eased value at time <paramref name="t"/>, between 0 and 1.
            </returns>
        </member>
        <member name="M:SerpentModding.UIController.BounceOut(System.Double)">
            <summary>
            Bounce ease-out function for UI transition animations.
            Produces a bouncing effect, where the animation overshoots and rebounds before settling.
            </summary>
            <param name="t">
            The normalized time of the animation, ranging from 0 (start) to 1 (end).
            </param>
            <returns>
            The eased value at time <paramref name="t"/>, between 0 and 1.
            </returns>
        </member>
    </members>
</doc>
